group_by(Company, Year) %>%
summarise(totalcarloads = sum(monthly_carloads), Index) %>%
ggplot(aes(x = totalcarloads, y = Index)) +
geom_point(aes(color = as.factor(Year))) +
ggtitle("Scatterplot of ISM Index against total monthly carloads") +
xlab("Total monthly carloads") +
ylab("ISM Index")
df %>%
filter(Commodity == "Crushed Stone, Sand and Gravel") %>%
group_by(Company, Year) %>%
summarise(totalcarloads = sum(monthly_carloads), Index) %>%
ggplot(aes(x = totalcarloads, y = Index)) +
geom_point(aes(color = as.factor(Year))) +
ggtitle("Scatterplot of ISM Index against total monthly carloads") +
xlab("Total monthly carloads") +
ylab("ISM Index") +
theme(name = "Year" )
df %>%
filter(Commodity == "Crushed Stone, Sand and Gravel") %>%
group_by(Company, Year) %>%
summarise(totalcarloads = sum(monthly_carloads), Index) %>%
ggplot(aes(x = totalcarloads, y = Index)) +
geom_point(aes(color = as.factor(Year))) +
ggtitle("Scatterplot of ISM Index against total monthly carloads") +
xlab("Total monthly carloads") +
ylab("ISM Index")
df %>%
filter(Commodity == "Crushed Stone, Sand and Gravel") %>%
group_by(Company, Year) %>%
summarise(totalcarloads = sum(monthly_carloads), Index) %>%
ggplot(aes(x = totalcarloads, y = Index)) +
geom_point(aes(color = as.factor(Year))) +
ggtitle("Scatterplot of ISM Index against total monthly carloads") +
xlab("Total monthly carloads") +
ylab("ISM Index") +
theme_bw()
?element.text
df %>%
filter(Commodity == "Crushed Stone, Sand and Gravel") %>%
group_by(Company, Year) %>%
summarise(totalcarloads = sum(monthly_carloads), Index) %>%
ggplot(aes(x = totalcarloads, y = Index)) +
geom_point(aes(color = as.factor(Year))) +
ggtitle("Scatterplot of ISM Index against total monthly carloads") +
xlab("Total monthly carloads") +
ylab("ISM Index") +
theme(legend.title = 'Year')
df %>%
filter(Commodity == "Crushed Stone, Sand and Gravel") %>%
group_by(Company, Year) %>%
summarise(totalcarloads = sum(monthly_carloads), Index) %>%
ggplot(aes(x = totalcarloads, y = Index)) +
geom_point(aes(color = as.factor(Year))) +
ggtitle("Scatterplot of ISM Index against total monthly carloads") +
xlab("Total monthly carloads") +
ylab("ISM Index") +
scale_fill_discrete(name = "Year")
df %>%
filter(Commodity == "Crushed Stone, Sand and Gravel") %>%
group_by(Company, Year) %>%
summarise(totalcarloads = sum(monthly_carloads), Index) %>%
ggplot(aes(x = totalcarloads, y = Index)) +
geom_point(aes(color =Year)) +
ggtitle("Scatterplot of ISM Index against total monthly carloads") +
xlab("Total monthly carloads") +
ylab("ISM Index")
df %>%
filter(Commodity == "Crushed Stone, Sand and Gravel") %>%
group_by(Company, Year) %>%
summarise(totalcarloads = sum(monthly_carloads), Index) %>%
ggplot(aes(x = totalcarloads, y = Index)) +
geom_point(aes(color =Year)) +
guides(color = "legend")
ggtitle("Scatterplot of ISM Index against total monthly carloads") +
xlab("Total monthly carloads") +
ylab("ISM Index")
df %>%
filter(Commodity == "Crushed Stone, Sand and Gravel") %>%
group_by(Company, Year) %>%
summarise(totalcarloads = sum(monthly_carloads), Index) %>%
ggplot(aes(x = totalcarloads, y = Index)) +
geom_point(aes(color = as.factor(Year))) +
ggtitle("Scatterplot of ISM Index against total monthly carloads") +
xlab("Total monthly carloads") +
ylab("ISM Index") +
scale_fill_discrete(name = Year)
df %>%
filter(Commodity == "Crushed Stone, Sand and Gravel") %>%
group_by(Company, Year) %>%
summarise(totalcarloads = sum(monthly_carloads), Index) %>%
ggplot(aes(x = totalcarloads, y = Index)) +
geom_point(aes(color = as.factor(Year))) +
ggtitle("Scatterplot of ISM Index against total monthly carloads") +
xlab("Total monthly carloads") +
ylab("ISM Index") +
scale_fill_discrete(name = "Year")
df %>%
filter(Commodity == "Crushed Stone, Sand and Gravel") %>%
group_by(Company, Year) %>%
summarise(totalcarloads = sum(monthly_carloads), Index) %>%
ggplot(aes(x = totalcarloads, y = Index)) +
geom_point(aes(color = as.factor(Year))) +
scale_fill_discrete(name = "Year") +
ggtitle("Scatterplot of ISM Index against total monthly carloads") +
xlab("Total monthly carloads") +
ylab("ISM Index")
df %>%
group_by(Company, Commodity) %>%
summarise(corr = cor(monthly_carloads, Index)) %>%
arrange(desc(corr)) %>%
head()
df %>%
group_by(Company, Commodity) %>%
summarise(corr = cor(monthly_carloads, Index)) %>%
arrange(desc(corr)) %>%
df %>%
group_by(Company, Commodity) %>%
summarise(corr = cor(monthly_carloads, Index)) %>%
arrange(desc(corr))
---
title: "Foundations_of_Stats_Homework"
author: "Casey Hoffman"
output: html_document
---
## Question #1: Body Temperature
The `Temp.txt` dataset records the body temperatures, gender, and heart rate of 130 individuals; you may assume that the observations are independent of one another.
1. Read the data into R and provide basic numerical EDA to describe the data.
+ Provide univariate EDA for all variables, and bivariate EDA where appropriate.
2. Provide basic graphical EDA to describe the data.
+ Provide univariate EDA for all continuous variables, and bivariate EDA where appropriate.
3. You have heard that the average human body temperature is 98.6 degrees Fahrenheit. Does this data support this claim? (Perform a hypothesis test to determine whether the true population mean body temperature is 98.6 degrees Fahrenheit.)
+ What is a 95% confidence interval for the average human body temperature?
+ Interpret your results in context of the problem.
4. Is there a significant difference in body temperature between males and females? If so, quantify this difference.
+ What is a 95% confidence interval for the average difference in human body temperature between males and females?
+ Interpret your results in context of the problem.
+ [**Bonus**] If we had collected a lot of samples of the body temperature for different genders, we could have directly compared *the average of the average temperature* for each gender. Hypothesis tests we have covered allow us to deduce the distribution of the average without needing to collect many samples (we have only 65 males and 65 females). Another simple way to achieve this is to **bootstrap**. Random sample (with replacement) 65 observations from each gender, then use them as a new sample. By bootstrapping, derive the 95% confidence interval for the average difference in human body temperature between males and females.
5. You believe the variances of male heart rate and female heart rate are different; specifically, you claim that females have a lower heart rate variance. Test this claim.
+ What is a 95% confidence interval for the ratio between female and male heart rate variances?
+ Interpret your results in context of the problem.
```{r, include=FALSE}
library(dplyr)
library(ggplot2)
library(gridExtra)
library(tidyr)
temp = read.table('https://s3.amazonaws.com/graderdata/Temp.txt', header = TRUE)
temp = temp %>% mutate(Gender = as.factor(Gender))
# 1) Numerical EDA (bivariate EDA where appropriate)
summary(temp) # univariate numerical EDA
temp %>%  # produces a table of bivariate EDA
group_by(Gender) %>%
summarise(mean(Body.Temp), mean(Heart.Rate),median(Body.Temp), median(Heart.Rate),
min(Body.Temp), min(Heart.Rate), max(Body.Temp), max(Heart.Rate))
# 2) Graphical EDA (bivariate EDA where appropriate)
# univariate continuous EDA
BT.density = temp %>%
ggplot(aes(x = Body.Temp)) +
geom_density() +
ggtitle("Density Plot + Boxplot of Body Temp")
BT.boxplot = temp %>%
ggplot(aes(x = Body.Temp)) + geom_boxplot()
grid.arrange(BT.density, BT.boxplot)
HR.density = temp %>%
ggplot(aes(x = Heart.Rate)) +
geom_density() +
ggtitle("Density Plot + Boxplot of Heart Rate")
HR.boxplot = temp %>%
ggplot(aes(x = Heart.Rate)) + geom_boxplot()
grid.arrange(HR.density, HR.boxplot)
# bivariate EDA
temp %>%
ggplot(aes(x = Body.Temp)) +
geom_density(aes(color = Gender)) +
ggtitle("Density Plot of Body Temperature by Gender")
temp %>%
ggplot(aes(x = Body.Temp)) +
geom_boxplot(aes(fill = Gender)) +
ggtitle("Boxplot of Body Temperature by Gender")
temp %>%
ggplot(aes(x = Heart.Rate)) +
geom_density(aes(color = Gender)) +
ggtitle("Density Plot of Heart Rate by Gender")
temp %>%
ggplot(aes(x = Heart.Rate)) +
geom_boxplot(aes(fill = Gender)) +
ggtitle("Boxplot of Heart Rate by Gender")
# 3) H0 test: compare sample avg body temp to population parameter of mu=98.6
t.test(temp$Body.Temp, mu = 98.6, alternative = "two.sided")
# the 95% confidence interval is: 98.12-98.38
# t = -5.45, p < .05. the t-test reached statistical significance; we reject the null hypothesis
# our data does not support the claim that the avg human body temp = 98.6 F,
# meaning the --true population mean-- is likely not 98.6 (or we made a Type I error)
# 4) H0 test: do the avg body temps of men + women differ?
males = temp[temp$Gender == "Male", ]
females = temp[temp$Gender == "Female", ]
females = temp %>% filter(Gender == "Female")
t.test(males$Body.Temp, females$Body.Temp, alternative = "two.sided")
# 95% CI: -0.54 to -0.04
# t = -2.2854, p = .02. p < 0.05 so we can reject the null, and interpret this to
# indicate males and females ARE significantly different.
# 5) See if VARIANCE of male and female HR differs; specifically hypothesize females have a lower HR variance
var.test(females$Heart.Rate, males$Heart.Rate, alternative = "less")
# 95% CI: 0 to 2.88
# Interpretation: p = .9945 -- we could have not been more incorrect
# The F test is not significant. Females do not have significantly lower variance in HR than males.
# Inspection of the variances of the two groups determines females actually have greater
# variance in HR than males -- however, they may not have significantly greater variance.
```
## Question #2: Plant Growth
Load the `PlantGrowth` dataset located in the `datasets` library; this dataset contains dried plant weight measurements for the same species of plant under three different conditions (two separate growth treatments, and a control group where no treatment was applied). You may assume that the observations are independent of one another.
1. Create side-by-side boxplots of the plant weights segmented by the type of applied treatment. Describe the features of the graph.
2. Calculate the standard deviations of each conditional distribution of plant weight based on the applied treatment. Do these differ significantly?
+ **NB**: To avoid increasing our chance of encountering a "false positive," we must avoid applying three separate F-tests (treatment #1 vs treatment #2; treatment #1 vs control; treatment #2 vs control). As an alternative, Bartlett's Test of Homogeneity of Variances allows us to simultaneously test for the similarity of a group of variances, rather than just a pair. Implement this test using the `bartlett.test()` function and report your results.
3. Is there a significant difference in the weight of plants based on the growth treatments they were given? Conduct a hypothesis test and report your results in context of the problem.
+ Given the results of the Bartlett test, is the result of your hypothesis test valid?
```{r}
library(datasets)
data("PlantGrowth")
# 1) side-by-side boxplots
ggplot(data = PlantGrowth, aes(x = group, y = weight)) +
geom_boxplot(aes(fill = group)) +
ggtitle("Plant Weights by Applied Treatment")
# The control group has the widest IQR and the most moderate weight of the 3 treatments.
# Trt1 has a slightly narrower IQR and a overall smaller weight than control. It also has two extremely heavy outliers.
# Trt2 has the narrowest IQR (and overall range), and the greatest weight overall of the 3 groups
# 2) calculate the SDs of each treatment group + bartlett.test
PlantGrowth %>%
group_by(group) %>%
summarise(sd(weight))
bartlett.test(x = PlantGrowth$weight, g = PlantGrowth$group)
# Bartlett's K-squared = 2.8786, p = 0.2371
# The variances are NOT significantly different; we have homogeneity of variance.
# This means the variances of the three groups do not significantly differ from one another.
# 3) H0 test of treatment on weight:
summary(aov(PlantGrowth$weight ~ PlantGrowth$group))
# F = 4.846, p = .0159. The ANOVA produced a significant F ratio, we can interpret this to mean that
# the three groups' weights significantly differ due to the growth treatment.
# Since bartlett's test was NOT significant, we can assume HOV and meet the assumptions
# necessary to perform an ANOVA. This test, and the results are valid.
```
## Question #3: Gender, Hair, & Eye Color
Load the `HairEyeColor` dataset located in the `datasets` library; this is a three dimensional dataset that records the hair color, eye color, and gender of 592 different statistics students.
1. Visualize the entire dataset using a mosaic plot using the following command:
+ `mosaicplot(HairEyeColor, shade = TRUE)`
+ Which category combinations receive more observations than expected? Fewer observations than expected?
2. Reduce your dataset to focus on just females with brown and blue eyes (but still include all hair colors). Create another mosaic plot and describe what you see.
+ Conduct a hypothesis test to see if hair and eye color are independent of one another for this reduced dataset. Report your results in context of the problem.
3. For the reduced dataset, which category combination contributed most to any statistical deviations? Which category contributed the least? By how much for each?
```{r}
data("HairEyeColor")
# 1) visualize the data
mosaicplot(HairEyeColor, shade = TRUE)
# More observations than expected: Black/Brown/Male, Black/Brown/Female, Blond/Brown/Female
# Fewer obs than expected: Black/Blue/Female, Brown/Blue/Female, Blond/Brown/Male, Blond/Brown/Female
# 2) Reduce dataset to focus on just females with brown and blue eyes
reduced = HairEyeColor[,1:2,2]
mosaicplot(reduced, shade = TRUE)
# There are more observations than expected of: black hair/brown eyes and blond hair/blue eyes
# There are less observations than expected of: black hair/blue eyes, brown hair/blue eyes, and
# blond hair/brown eyes.
chisq.test(reduced)
# X2 for independence produced X2 = 82.727 and p < .05 (very small). We can reject the null,
# that there is no association between hair and eye color. We can determine that hair color
# and eye color are --not independent--
# 3) For the reduced dataset, which category combination contributed most to any statistical deviations? Which category contributed the least? By how much for each?
# Blond hair/brown eyes and blond hair/blue eyes both had standardized residuals of ±4, they contributed the most
# brown hair/brown eyes, red hair/brown eyes and red hair/blue eyes contributed the least as they had
# standardized residuals in the normal range (between 0 and ±2)
```
data("HairEyeColor")
# 1) visualize the data
mosaicplot(HairEyeColor, shade = TRUE)
# More observations than expected: Black/Brown/Male, Black/Brown/Female, Blond/Brown/Female
# Fewer obs than expected: Black/Blue/Female, Brown/Blue/Female, Blond/Brown/Male, Blond/Brown/Female
# 2) Reduce dataset to focus on just females with brown and blue eyes
reduced = HairEyeColor[,1:2,2]
mosaicplot(reduced, shade = TRUE)
# There are more observations than expected of: black hair/brown eyes and blond hair/blue eyes
# There are less observations than expected of: black hair/blue eyes, brown hair/blue eyes, and
# blond hair/brown eyes.
chisq.test(reduced)
# X2 for independence produced X2 = 82.727 and p < .05 (very small). We can reject the null,
# that there is no association between hair and eye color. We can determine that hair color
# and eye color are --not independent--
# 3) For the reduced dataset, which category combination contributed most to any statistical deviations? Which category contributed the least? By how much for each?
# Blond hair/brown eyes and blond hair/blue eyes both had standardized residuals of ±4, they contributed the most
# brown hair/brown eyes, red hair/brown eyes and red hair/blue eyes contributed the least as they had
# standardized residuals in the normal range (between 0 and ±2)
shiny::runApp('NYCDSA/shinyproject/shinyapp')
runApp('NYCDSA/shinyproject/shinyapp')
runApp('NYCDSA/shinyproject/shinyapp')
library(tidyverse)
ulta <- read.csv('ulta-cleaned.csv')
ulta = ulta %>%
mutate(X = NULL, brand = as.factor(brand)) # X: 'row index' column
ggplot(data = ulta) + geom_histogram(aes(x = avg_review), binwidth=.1)
# add line with median
top_prods = ulta %>%
filter(n_review > 1000)
ggplot(data = top_prods) +
geom_bar(aes(x = brand, y = mean(avg_review), fill = brand), stat = 'identity')
setwd("~/Desktop/NYCDSA/ulta")
ulta <- read.csv('ulta-cleaned.csv')
ulta = ulta %>%
mutate(X = NULL, brand = as.factor(brand)) # X: 'row index' column
ggplot(data = ulta) + geom_histogram(aes(x = avg_review), binwidth=.1)
# add line with median
top_prods = ulta %>%
filter(n_review > 1000)
ggplot(data = top_prods) +
geom_bar(aes(x = brand, y = mean(avg_review), fill = brand), stat = 'identity')
ggplot(data = top_prods) +
geom_col(aes(x = brand, y = mean(avg_review), fill = brand), stat = 'identity')
summary(top_prods)
summary(top_prods)
ggplot(data = top_prods) + geom_histogram(aes(x = avg_review), binwidth=.1)
ggplot(data = top_prods) + geom_histogram(aes(x = avg_review))
ggplot(data = top_prods) + geom_histogram(aes(x = avg_review), binwidth=10)
ggplot(data = top_prods) + geom_histogram(aes(x = avg_review), binwidth=5)
ggplot(data = top_prods) + geom_histogram(aes(x = avg_review), binwidth=.1)
ggplot(data = top_prods) + geom_histogram(aes(x = avg_review), binwidth=.05)
ggplot(data = top_prods) + geom_histogram(aes(x = avg_review), binwidth=.5)
ggplot(data = top_prods) + geom_histogram(aes(x = avg_review), binwidth=.1)
ggplot(data = top_prods) + geom_histogram(aes(x = price_usd))
ggplot(data = top_prods) + geom_histogram(aes(x = price_usd), binwidth = .1)
ggplot(data = top_prods) + geom_histogram(aes(x = price_usd), binwidth = 1)
ggplot(data = top_prods) + geom_histogram(aes(x = price_usd), binwidth = 10)
ggplot(data = ulta) + geom_histogram(aes(x = price_usd), binwidth = 5)
ggplot(data = ulta) + geom_histogram(aes(x = price_usd), binwidth = 5) +
geom_vline(xintercept = median(price_usd))
median(price_usd)
ggplot(data = ulta) + geom_histogram(aes(x = price_usd), binwidth = 5) +
geom_vline(xintercept = median(ulta$price_usd))
ggplot(data = ulta) + geom_histogram(aes(x = price_usd), binwidth = 5) +
geom_vline(xintercept = median(ulta$price_usd), aes(color='red'))
ggplot(data = ulta) + geom_histogram(aes(x = price_usd), binwidth = 5) +
geom_vline(xintercept = median(ulta$price_usd), aes(col='red'))
ggplot(data = ulta) + geom_histogram(aes(x = price_usd), binwidth = 5) +
geom_vline(aes(xintercept = median(ulta$price_usd)), colour='red')
ggplot(data = ulta) + geom_histogram(aes(x = price_usd), binwidth = 5, colour='blue') +
geom_vline(aes(xintercept = median(price_usd)), colour='red')
ggplot(data = ulta) + geom_histogram(aes(x = price_usd), binwidth = 5, fill='blue') +
geom_vline(aes(xintercept = median(price_usd)), colour='red')
ggplot(data = ulta) + geom_histogram(aes(x = price_usd), binwidth = 5, fill='blue', color='black') +
geom_vline(aes(xintercept = median(price_usd)), colour='red')
ggplot(data = ulta) + geom_histogram(aes(x = price_usd), binwidth = 5, fill='blue', color='black') +
geom_vline(aes(xintercept = median(price_usd)), colour='red') +
ggtitle('Histogram of Moisturizer by Price')
summary(top_prods)
top_prods = ulta %>%
filter(n_review > 1000) %>%
mutate('price_range' = ifelse(price_usd < 25, "Under $25",
ifelse(price_usd < 40, "$25-40",
ifelse(price_usd > 100, "Over $100", "$40-100")))
top_prods = ulta %>%
filter(n_review > 1000) %>%
mutate('price_range' = ifelse(price_usd < 25, "Under $25",
ifelse(price_usd < 40, "$25-40",
ifelse(price_usd > 100, "Over $100", "$40-100"))))
library(tidyverse)
top_prods = ulta %>%
filter(n_review > 1000) %>%
mutate('price_range' = ifelse(price_usd < 25, "Under $25",
ifelse(price_usd < 40, "$25-40",
ifelse(price_usd > 100, "Over $100", "$40-100"))))
summary(top_prods)
top_prods = ulta %>%
filter(n_review > 1000) %>%
mutate('price_range' = ifelse(price_usd < 25, "Under $25",
ifelse(price_usd < 40, "$25-40",
ifelse(price_usd > 100, "Over $100", "$40-100")))) %>%
mutate(price_range = as.factor(price_range))
summary(top_prods)
top_prods = ulta %>%
filter(n_review > 1000) %>%
mutate('price_range' = ifelse(price_usd < 25, "Under $25",
ifelse(price_usd < 50, "$25-50",
ifelse(price_usd > 100, "Over $100", "$50-100")))) %>%
mutate(price_range = as.factor(price_range))
summary(top_prods)
summary(top_prods)
ggplot(data = top_prods) + geom_bar(aes(x = avg_review, fill = "price_range"))
ggplot(data = top_prods) + geom_bar(aes(x = avg_review, color = price_range))
ggplot(data = top_prods) + geom_bar(aes(x = avg_review, fill = price_range))
ggplot(data = top_prods) + geom_bar(aes(x = avg_review, fill = price_range), position='dodge')
ggplot(data = top_prods) + geom_histogram(aes(x = avg_review) + facet_wrap(~ price_range)
ggplot(data = top_prods) + geom_histogram(aes(x = avg_review)) + facet_wrap(~ price_range)
ggplot(data = top_prods) +
geom_histogram(aes(x = avg_review)) + facet_wrap(~ price_range)
top_prods = ulta %>%
filter(n_review > 1000) %>%
mutate('price_range' = ifelse(price_usd < 25, "Under $25",
ifelse(price_usd < 50, "$25-50", "$50 or more" ))) %>%
mutate(price_range = as.factor(price_range))
summary(top_prods)
ggplot(data = top_prods) +
geom_histogram(aes(x = avg_review)) + facet_wrap(~ price_range)
ggplot(data = top_prods) +
geom_histogram(aes(x = avg_review, fill = price_range))
ggplot(data = top_prods) +
geom_histogram(aes(x = avg_review, fill = price_range, position='dodge'))
summary(top_prods)
ggplot(data = top_prods) +
geom_histogram(aes(x = avg_review, fill = price_range), position='dodge')
top_prods = ulta %>%
# filter(n_review > 1000) %>%
mutate('price_range' = ifelse(price_usd < 25, "Under $25",
ifelse(price_usd < 50, "$25-50", "$50 or more" ))) %>%
mutate(price_range = as.factor(price_range))
summary(top_prods)
ggplot(data = top_prods) +
geom_histogram(aes(x = avg_review, fill = price_range), position='dodge')
summary(top_prods)
ggplot(data = top_prods) +
geom_histogram(aes(x = avg_review)) + facet_wrap(~ price_range)
ggplot(data = top_prods) +
geom_scatter(aes(x = avg_review)) + facet_wrap(~ price_range)
ggplot(data = top_prods) +
geom_point(aes(x = avg_review))
ggplot(data = top_prods) +
geom_boxplot(aes(y = price_usd, color = price_range))
ggplot(data = top_prods) +
geom_boxplot(aes(y = price_usd, fill = price_range))
ggplot(data = top_prods) +
geom_boxplot(aes(y = avg_review, fill = price_range))
top_prods = ulta %>%
filter(n_review > 100) %>%
mutate('price_range' = ifelse(price_usd < 25, "Under $25",
ifelse(price_usd < 50, "$25-50", "$50 or more" ))) %>%
mutate(price_range = as.factor(price_range))
summary(top_prods)
ggplot(data = top_prods) +
geom_boxplot(aes(y = avg_review, fill = price_range))
summary(top_prods)
ggplot(data = top_prods) +
geom_boxplot(aes(y = avg_review, fill = price_range)) +
scale_x_discrete(limits = c("Under $25", "$25-50", "$50 or more"))
ggplot(data = top_prods) +
geom_boxplot(aes(y = avg_review, fill = price_range)) +
scale_y_discrete(limits = c("Under $25", "$25-50", "$50 or more"))
review_plot = ggplot(data = top_prods) +
geom_boxplot(aes(y = avg_review, fill = price_range))
summary(top_prods)
top_prods = ulta %>%
filter(n_review > 100) %>%
mutate('price_range' = ifelse(price_usd < 25, "Under $25",
ifelse(price_usd < 50, "$25-50", "$50 or more" ))) %>%
mutate(price_range = as.factor(price_range))
summary(top_prods)
review_plot = ggplot(data = top_prods) +
geom_boxplot(aes(y = avg_review, fill = price_range))
review_plot
review_plot = ggplot(data = top_prods) +
geom_boxplot(aes(x = price_range, y = avg_review, fill = price_range))
review_plot + scale_x_discrete(limits = c("Under $25", "$25-50", "$50 or more"))
# pricing
ggplot(data = ulta) + geom_histogram(aes(x = price_usd), binwidth = 5, fill='blue', color='black') +
geom_vline(aes(xintercept = median(price_usd)), colour='red') +
ggtitle('Histogram of Moisturizer by Price')
summary(top_prods)
review_plot = ggplot(data = top_prods) +
geom_boxplot(aes(x = price_range, y = avg_review, fill = price_range))
review_plot + scale_x_discrete(limits = c("Under $25", "$25-50", "$50 or more"))
review_plot +
scale_x_discrete(limits = c("Under $25", "$25-50", "$50 or more")) +
ggtitle("Boxplot of Average Review, by Price Range")
ggplot(data = top_prods) +
geom_density(aes(x = price_range, y = avg_review, fill = price_range))
ggplot(data = top_prods) +
geom_density(aes(x = avg_review))
ggplot(data = top_prods) +
geom_density(aes(x = avg_review, fill = price_range))
ggplot(data = top_prods) +
geom_density_2d(aes(x = avg_review, fill = price_range))
ggplot(data = top_prods) +
geom_density_2d(aes(x = avg_review))
ggplot(data = top_prods) +
geom_freqpoly(aes(x = avg_review, fill = price_range))
ggplot(data = top_prods) +
geom_freqpoly(aes(x = avg_review, color = price_range))
ggplot(data = top_prods) +
geom_density(aes(x = avg_review, color = price_range))
ggplot(data = top_prods) +
geom_density(aes(x = avg_review, color = price_range)) +
ggtitle("Density of Average Product Review, by Price Range")
top_prods %>%
mutate('bestseller_status' = avg_review*n_review) %>%
arrange(bestseller_status)
top_prods %>%
mutate('bestseller_status' = avg_review*n_review) %>%
arrange(bestseller_status, ascending=F)
View(top_prods)
top_prods = top_prods %>%
mutate('bestseller_status' = avg_review*n_review) %>%
arrange(bestseller_status, ascending=F)
View(top_prods)
# pricing
ggplot(data = ulta) + geom_histogram(aes(x = price_usd), binwidth = 5, fill='blue', color='black') +
geom_vline(aes(xintercept = median(price_usd)), colour='red') +
ggtitle('Histogram of Moisturizer by Price')
eview_plot = ggplot(data = top_prods) +
geom_boxplot(aes(x = price_range, y = avg_review, fill = price_range))
review_plot = ggplot(data = top_prods) +
geom_boxplot(aes(x = price_range, y = avg_review, fill = price_range))
review_plot +
scale_x_discrete(limits = c("Under $25", "$25-50", "$50 or more")) +
ggtitle("Boxplot of Average Review, by Price Range")
ggplot(data = top_prods) +
geom_density(aes(x = avg_review, color = price_range)) +
ggtitle("Density of Average Product Review, by Price Range")
library(tidyverse)
ulta <- read.csv('ulta-cleaned.csv')
